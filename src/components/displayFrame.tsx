import { motion, AnimatePresence } from 'framer-motion';
import { fadeIn } from '../transitions';
import ReactMarkdown from 'react-markdown';
import remarkGfm from 'remark-gfm';

type ResponseType = {
    type: 'text' | 'image';
    content: string;
    prompt: string;
};

type Props = {
    response: ResponseType | null;
    isLoading?: boolean;
};
  
// Display component to show the response
const Display = ({ response, isLoading = false }: Props) => {
    return (
        <motion.div 
            initial="hidden"
            animate="visible"
            variants={fadeIn}
            className="max-w-4xl mx-auto my-4 p-6 bg-white rounded-lg shadow-lg"
        >
            <h1 className="text-2xl font-bold mb-4 text-gray-800">Response</h1>
            <AnimatePresence mode="wait">
                {response ? (
                    <motion.div
                        key={response.content}
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        exit={{ opacity: 0, y: -20 }}
                        transition={{ duration: 0.5 }}
                    >
                        {response.type === 'image' ? (
                            <div className="relative group">
                                <motion.img 
                                    src={response.content} 
                                    alt="Generated by DALL-E" 
                                    className="w-[90%] h-auto mx-auto rounded-lg shadow-md transform transition-transform duration-300 group-hover:scale-102"
                                    layoutId="response-image"
                                />
                            </div>
                        ) : (
                            <>
                                <motion.div
                                   className="text-lg leading-relaxed prose prose-sm lg:prose-base dark:prose-invert bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-xl shadow-xl p-6 mb-4 text-left border-l-8 border-pink-400"
                                    initial={{ opacity: 0 }}
                                    animate={{ opacity: 1 }}
                                    transition={{ duration: 0.5, delay: 0.2 }}
                                >
                                    <ReactMarkdown remarkPlugins={[remarkGfm]}>
                                        {response.prompt}
                                    </ReactMarkdown>
                                </motion.div>
                                <motion.div
                                    className="text-lg leading-relaxed prose prose-sm lg:prose-base dark:prose-invert bg-gradient-to-l from-blue-600 to-cyan-400 text-white-900 rounded-xl shadow-xl p-6 mb-4 text-right border-r-8 border-cyan-300"
                                    initial={{ opacity: 0 }}
                                    animate={{ opacity: 1 }}
                                    transition={{ duration: 0.5, delay: 0.2 }}
                                >
                                    <ReactMarkdown remarkPlugins={[remarkGfm]}>
                                        {response.content}
                                    </ReactMarkdown>
                                </motion.div>
                            </>
                        )}
                    </motion.div>
                ) : isLoading ? (
                    <motion.div
                        className="flex flex-col items-center justify-center"
                        initial={{ opacity: 0 }}
                        animate={{ opacity: 1 }}
                        exit={{ opacity: 0 }}
                    >
                        <div className="relative h-16 w-80">
                            {[...Array(5)].map((_, i) => (
                                <motion.div
                                    key={i}
                                    className="absolute top-0 h-4 w-4 rounded-full bg-gradient-to-r from-blue-400 to-purple-600"
                                    initial={{ x: 0 }}
                                    animate={{
                                        x: [0, 320, 0],
                                        scale: [1, 1.5, 1],
                                        opacity: [0.5, 1, 0.5]
                                    }}
                                    transition={{
                                        duration: 2.5,
                                        repeat: Infinity,
                                        delay: i * 0.2,
                                        ease: "easeInOut"
                                    }}
                                />
                            ))}
                        </div>
                    </motion.div>
                ) : (
                    <motion.p 
                        className="text-gray-500 italic"
                        initial={{ opacity: 0 }}
                        animate={{ opacity: 1 }}
                        exit={{ opacity: 0 }}
                    >
                        Waiting for your creative prompt...
                    </motion.p>
                )}
            </AnimatePresence>
        </motion.div>
    );
};
  
export default Display;